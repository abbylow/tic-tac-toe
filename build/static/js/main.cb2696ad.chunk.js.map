{"version":3,"sources":["component/square.jsx","component/board.jsx","service/calculateWinner.js","component/game.jsx","index.js"],"names":["Square","props","className","onClick","bold","value","Board","i","highlight","key","this","squares","board","k","row","m","wonLine","length","indexOf","push","renderSquare","renderBoard","React","Component","calculateWinner","lines","a","b","c","winner","Game","state","history","Array","fill","location","col","xIsNext","stepNumber","isAsc","slice","setState","concat","parseInt","step","status","current","moves","map","move","desc","jumpTo","filter","el","handleClick","sort","reverse","restart","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cb2696ad.chunk.js","sourcesContent":["import React from 'react';\n\nexport function Square(props) {\n  return (\n    <button className=\"square\" onClick={props.onClick}>\n      {props.bold ? <b>{props.value}</b> : <div>{props.value}</div>}\n    </button>\n  );\n}\n","import React from 'react';\nimport { Square } from \".\";\n\nexport class Board extends React.Component {\n\n  renderSquare(i, highlight) {\n    return <Square key={`square-${i}`} bold={highlight} value={this.props.squares[i]} onClick={() => { this.props.onClick(i) }} />;\n  }\n\n  renderBoard() {\n    let board = [];\n    for (let k = 0; k < 3; k++) {\n      let row = [];\n      for (let m = 0; m < 3; m++) {\n        let i = (3 * k) + m;\n        let highlight = false;\n        if (this.props.wonLine.length > 0 && this.props.wonLine.indexOf(i) > -1) {\n          highlight = true;\n        }\n        row.push(this.renderSquare(i, highlight));\n      }\n      board.push(<div className=\"board-row\" key={`row-${k}`}>{row}</div>);\n    }\n    return board;\n  }\n\n  render() {\n    return (\n      <div>\n        {this.renderBoard()}\n      </div>\n    );\n  }\n}","\nexport function calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return { winner: squares[a], wonLine: lines[i] };\n    }\n  }\n  return { winner: null, wonLine: [] };\n}","import React from 'react';\nimport { Board } from \".\";\nimport { calculateWinner } from \"../service/calculateWinner\";\n\nexport class Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: [{ squares: Array(9).fill(null), location: { col: null, row: null } }],\n      xIsNext: true,\n      stepNumber: 0,\n      isAsc: true,\n    }\n  }\n\n  handleClick(i) {\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\n    const current = history[history.length - 1];\n    const squares = current.squares.slice();\n    if (calculateWinner(squares).winner || squares[i]) {\n      return;\n    }\n    squares[i] = this.state.xIsNext ? 'X' : 'O';\n    this.setState({\n      history: history.concat({ squares, location: { col: i % 3, row: parseInt(i / 3) } }),\n      xIsNext: !this.state.xIsNext,\n      stepNumber: history.length,\n    });\n  }\n\n  jumpTo(step) {\n    this.setState({\n      stepNumber: step,\n      xIsNext: (step % 2) === 0,\n    })\n  }\n\n  sort() {\n    this.setState({ isAsc: !this.state.isAsc });\n  }\n\n  restart(){\n    this.setState({\n      history: [{ squares: Array(9).fill(null), location: { col: null, row: null } }],\n      xIsNext: true,\n      stepNumber: 0,\n      isAsc: true,\n    });\n  }\n\n  render() {\n    const history = this.state.history;\n    const current = history[this.state.stepNumber];\n    const { winner, wonLine } = calculateWinner(current.squares);\n\n    const moves = history.map((step, move) => {\n      const desc = move ? `Go to move # ${move} ( ${step.location.col} , ${step.location.row})` : \"Go to game start\";\n      return (\n        <li key={move}>\n          <button onClick={() => this.jumpTo(move)}>\n            {move === this.state.stepNumber ? (<b>{desc}</b>) : desc}\n          </button>\n        </li>\n      )\n    })\n\n    let status;\n    if (winner) {\n      status = 'Winner: ' + winner;\n    }\n    else if (current.squares.filter(el => el === null).length === 0) {\n      status = 'It is a Draw';\n    }\n    else {\n      status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n    }\n\n    return (\n      <div className=\"game\">\n        <div className=\"game-board\">\n          <Board squares={current.squares} wonLine={wonLine} onClick={(i) => this.handleClick(i)} />\n        </div>\n        <div className=\"game-info\">\n          <div>{status}</div>\n          <button onClick={() => this.sort()}>Toggle order</button>\n          <ol>{this.state.isAsc ?  moves : moves.reverse()}</ol>\n          <button onClick={() => this.restart()}>Restart the game</button>\n        </div>\n      </div>\n    );\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Game } from \"./component\";\n\nReactDOM.render(\n  <Game />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}